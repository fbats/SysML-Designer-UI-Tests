--- RCPTT testcase ---
Format-Version: 1.0
Contexts: _sD67UDMzEeiRZ4kXU2JqQQ,_dzmbEDNZEeiRZ4kXU2JqQQ,_T3lvoDMyEeiRZ4kXU2JqQQ,_Z_ds0DMyEeiRZ4kXU2JqQQ,_RDvKQDQqEeiRde_P_PIz8w,_-LLTYDQqEeiRde_P_PIz8w
Element-Name: BDD_CreateAggregation
Element-Type: testcase
Element-Version: 3.0
External-Reference: 
Id: _YFQ5kDcaEeiI5Obnayse1w
Runtime-Version: 2.2.0.201705230341
Save-Time: 4/3/18 4:26 PM
Testcase-Type: ecl
Verifications: _ttBrYDdKEeiGB7O6M_uKBw

------=_.description-216f885c-d591-38ce-8ea2-e4f8cb4d6ffa
Content-Type: text/plain
Entry-Name: .description

Create an Aggregation in BDD with the tool RelationShips/Aggregation
Test 1- Create an Aggregation between two blocks
Test 2- Create an Aggregation between a Block and a ValueType
Test 3- Create an Aggregation between a Block and a DataType	
Test 4- Create an Aggregation between a Block and an Enumeration	
------=_.description-216f885c-d591-38ce-8ea2-e4f8cb4d6ffa--
------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac
Content-Type: text/ecl
Entry-Name: .content

// Test 1- Create an Aggregation between two blocks with tool Relationships/Aggregation
with [get-editor "bdd diagram"] {
    with [get-palette] {
    	with [get-palette-entry Associations] {
            mouse-move 8 14 button1 -height 27 -width 293
            mouse-press 8 14 button1 -height 27 -width 293
            mouse-release 8 14 button1 524288 -height 27 -width 293
        }
        with [get-palette-entry Aggregation] {
            mouse-press 68 20 button1 -height 27 -width 293
            mouse-release 68 20 button1 524288 -height 27 -width 293
        }
    }
    with [get-diagram -index 1 | get-edit-part -name "bdd diagram"] {
        with [get-edit-part -name "«Block»\r\n"
            + "block1" | get-edit-part -className DNodeListViewNodeListCompartment2EditPart] {
            mouse-move 29 0 button1 -height 14 -width 107
            mouse-press 29 0 button1 -height 14 -width 107
            mouse-release 29 0 button1 524288 -height 14 -width 107
        }
       with [get-edit-part -name "«Block»\r\n"
            + "block2"] {
            mouse-move 17 2 button1 -height 70 -width 111
            mouse-press 17 2 button1 -height 70 -width 111
            mouse-release  17 2 button1 524288 -height 70 -width 111
        }
    }
}
// Check Aggregation is displayed
get-editor "bdd diagram" | get-diagram -index 1 | get-edit-part -name "bdd diagram" 
	| get-edit-part -name "«Block»\r\n" + "block2" | get-target-connection -path 0
// Check edge decorator
with [get-editor "bdd diagram" | get-diagram -index 1 | get-edit-part -name "bdd diagram"] {
    with [get-edit-part -name "«Block»\r\n"
        + "block2" | get-target-connection -path 0] {
        get-property "element.ownedStyle.sourceArrow" | equals InputArrowWithDiamond | verify-true
        get-property "element.ownedStyle.targetArrow" | equals InputArrow | verify-true
    	get-property "element.ownedStyle.lineStyle" | equals solid | verify-true
    }
}

// Check Semantic
with [get-editor "bdd diagram" | get-diagram -index 1 | get-edit-part -name "bdd diagram"] {
    with [get-edit-part -name "«Block»\r\n"
        + "block2" | get-target-connection -path 0] {
        get-property "element.target.member.Property[0].name" | equals block1s | verify-true
        get-property "element.target.member.Property[1].name" | equals block2s | verify-true
    }
    with [get-edit-part -name "«Block»\r\n"
        + "block2" | get-target-connection -path 0] {
        get-property "element.semanticElements.Association[0].name" | equals block1sToBlock2s | verify-true
        get-property "element.semanticElements.Property[1].owner.name" | equals block1sToBlock2s | verify-true
        get-property "element.semanticElements.Property[1].name" | equals block2s | verify-true
        get-property "element.semanticElements.Property[1].aggregation" | equals shared | verify-true
        get-property "element.semanticElements.Property[1].isComposite" | equals false | verify-true
        get-property "element.semanticElements.Property[1].owningAssociation.name" | equals block1sToBlock2s 
            | verify-true
        get-property "element.semanticElements.Property[2].owner.name" | equals block1sToBlock2s | verify-true
        get-property "element.semanticElements.Property[2].name" | equals block1s | verify-true
        get-property "element.semanticElements.Property[2].aggregation" | equals none | verify-true
        get-property "element.semanticElements.Property[2].isComposite" | equals false | verify-true
        get-property "element.semanticElements.Property[2].owningAssociation.name" | equals block1sToBlock2s 
            | verify-true
    }
}

// Test 2- Create Aggregation between Block and ValueType	
with [get-editor "bdd diagram"] {
    with [get-palette] {
    	with [get-palette-entry Associations] {
            mouse-move 8 14 button1 -height 27 -width 293
            mouse-press 8 14 button1 -height 27 -width 293
            mouse-release 8 14 button1 524288 -height 27 -width 293
        }
        with [get-palette-entry Aggregation] {
            mouse-press 68 20 button1 -height 27 -width 293
            mouse-release 68 20 button1 524288 -height 27 -width 293
        }
    }
    with [get-diagram -index 1 | get-edit-part -name "bdd diagram"] {
        with [get-edit-part -name "«Block»\r\n"
            + "block1"] {
            mouse-move 100 26 button1 -height 61 -width 111
            mouse-press 100 26 button1 -height 61 -width 111
            mouse-release 100 26 button1 524288 -height 61 -width 111
        }
       with [get-edit-part -name "«ValueType»\r\n"
            + "valueType1" | get-edit-part -className DNodeListNameEditPart] {
            mouse-move 14 10 button1 -height 34 -width 91
            mouse-press 14 10 button1 -height 34 -width 91
            mouse-release 14 10 button1 524288 -height 34 -width 91
        }
    }
}
// Check Aggregation is displayed
get-editor "bdd diagram" | get-diagram -index 1 | get-edit-part -name "bdd diagram" 
    | get-edit-part -name "«ValueType»\r\n" + "valueType1" | get-target-connection -path 0

// Test 3- Create Aggregation between Block and DataType	
with [get-editor "bdd diagram"] {
    with [get-palette] {
    	with [get-palette-entry Associations] {
            mouse-move 8 14 button1 -height 27 -width 293
            mouse-press 8 14 button1 -height 27 -width 293
            mouse-release 8 14 button1 524288 -height 27 -width 293
        }
        with [get-palette-entry Aggregation] {
            mouse-press 68 20 button1 -height 27 -width 293
            mouse-release 68 20 button1 524288 -height 27 -width 293
        }
    }
    with [get-diagram -index 1 | get-edit-part -name "bdd diagram"] {
        with [get-edit-part -name "«Block»\r\n"
            + "block1" | get-edit-part -className DNodeListNameEditPart] {
            mouse-move 36 27 button1 -height 34 -width 63
            mouse-press 36 27 button1 -height 34 -width 63
            mouse-release 36 27 button1 524288 -height 34 -width 63
        }
        with [get-edit-part -name DataType1 | get-edit-part -className DNodeListNameEditPart] {
            mouse-move 8 5 button1 -height 17 -width 80
            mouse-press 8 5 button1 -height 17 -width 80
            mouse-release 8 5 button1 524288 -height 17 -width 80
        }
    }
}
// Check Aggregation is displayed
get-editor "bdd diagram" | get-diagram -index 1 | get-edit-part -name "bdd diagram" 
    | get-edit-part -name "DataType1" | get-target-connection -path 0
    
// Test 4- Create Aggregation between Block and Enumeration	
with [get-editor "bdd diagram"] {
    with [get-palette] {
    	with [get-palette-entry Associations] {
            mouse-move 8 14 button1 -height 27 -width 293
            mouse-press 8 14 button1 -height 27 -width 293
            mouse-release 8 14 button1 524288 -height 27 -width 293
        }
        with [get-palette-entry Aggregation] {
            mouse-press 68 20 button1 -height 27 -width 293
            mouse-release 68 20 button1 524288 -height 27 -width 293
        }
    }
    with [get-diagram -index 1 | get-edit-part -name "bdd diagram"] {
        with [get-edit-part -name "«Block»\r\n"
            + "block1"] {
            mouse-move 91 32 button1 -height 61 -width 111
            mouse-press 91 32 button1 -height 61 -width 111
            mouse-release 91 32 button1 524288 -height 61 -width 111
        }
        with [get-edit-part -name Enumeration2 -index 1
			| get-edit-part -className DNodeListNameEditPart] {
            mouse-move 39 3 button1 -height 17 -width 99
            mouse-press 39 3 button1 -height 17 -width 99
            mouse-release 39 3 button1 524288 -height 17 -width 99
        }
    }
}
// Check Aggregation is displayed
get-editor "bdd diagram" | get-diagram -index 1 | get-edit-part -name "bdd diagram"
	| get-edit-part -name Enumeration2 -index 1 | get-target-connection -path 0


// Test5- Change Navigability for source end
with [get-editor "bdd diagram"] {
    with [get-diagram -index 1] {
        with [get-edit-part -name "bdd diagram"] {
            with [get-edit-part -name "«Block»\r\n"
                + "block2" | get-target-connection -path 0] {
                mouse-move 57 30 button1 -height 78 -width 91
                mouse-press 57 30 button1 -height 78 -width 91
                mouse-release  57 30 button1 524288 -height 78 -width 91
            }
        }
    }
}
with [get-view Properties] {
    get-section Ends | get-button Navigable | uncheck
}
// Check edge decorator
with [get-editor "bdd diagram" | get-diagram -index 1 | get-edit-part -name "bdd diagram"] {
    with [get-edit-part -name "«Block»\r\n"
        + "block2" | get-target-connection -path 0] {
        get-property "element.ownedStyle.sourceArrow" | equals Diamond | verify-true
        get-property "element.ownedStyle.targetArrow" | equals InputArrow | verify-true
    	get-property "element.ownedStyle.lineStyle" | equals solid | verify-true
    }
}

// Check Semantic
with [get-editor "bdd diagram" | get-diagram -index 1 | get-edit-part -name "bdd diagram"] {
    with [get-edit-part -name "«Block»\r\n"
        + "block2" | get-target-connection -path 0] {
        get-property "element.target.member.Property[0].name" | equals block1s | verify-true
        get-property "element.target.member.Property[1].name" | equals block2s | verify-true
   }
    with [get-edit-part -name "«Block»\r\n"
        + "block2" | get-target-connection -path 0] {
        get-property "element.semanticElements.Association[0].name" | equals block1sToBlock2s | verify-true
        get-property "element.semanticElements.Property[1].owner.name" | equals block1sToBlock2s | verify-true
        get-property "element.semanticElements.Property[1].name" | equals block2s | verify-true
        get-property "element.semanticElements.Property[1].aggregation" | equals shared | verify-true
        get-property "element.semanticElements.Property[1].isComposite" | equals false | verify-true
        get-property "element.semanticElements.Property[1].owningAssociation.name" | equals block1sToBlock2s 
            | verify-true
        get-property "element.semanticElements.Property[2].owner.name" | equals block1sToBlock2s | verify-true
        get-property "element.semanticElements.Property[2].name" | equals block1s | verify-true
        get-property "element.semanticElements.Property[2].aggregation" | equals none | verify-true
        get-property "element.semanticElements.Property[2].isComposite" | equals false | verify-true
        get-property "element.semanticElements.Property[2].owningAssociation.name" | equals block1sToBlock2s 
            | verify-true
    }
}


// Test6- Change Navigability for target end
with [get-view Properties] {
    get-section Ends | get-button Navigable -index 1 | uncheck
}
// Check edge decorator
with [get-editor "bdd diagram" | get-diagram -index 1 | get-edit-part -name "bdd diagram"] {
    with [get-edit-part -name "«Block»\r\n"
        + "block2" | get-target-connection -path 0] {
        get-property "element.ownedStyle.sourceArrow" | equals Diamond | verify-true
        get-property "element.ownedStyle.targetArrow" | equals NoDecoration | verify-true
    	get-property "element.ownedStyle.lineStyle" | equals solid | verify-true
    }
}

// Check Semantic
with [get-editor "bdd diagram" | get-diagram -index 1 | get-edit-part -name "bdd diagram"] {
    with [get-edit-part -name "«Block»\r\n"
        + "block2" | get-target-connection -path 0] {
        get-property "element.target.member.Property[0].name" | equals block1s | verify-true
        get-property "element.target.member.Property[1].name" | equals block2s | verify-true
   }
    with [get-edit-part -name "«Block»\r\n"
        + "block2" | get-target-connection -path 0] {
        get-property "element.semanticElements.Association[0].name" | equals block1sToBlock2s | verify-true
        get-property "element.semanticElements.Property[1].owner.name" | equals block1sToBlock2s | verify-true
        get-property "element.semanticElements.Property[1].name" | equals block2s | verify-true
        get-property "element.semanticElements.Property[1].aggregation" | equals shared | verify-true
        get-property "element.semanticElements.Property[1].isComposite" | equals false | verify-true
        get-property "element.semanticElements.Property[1].owningAssociation.name" | equals block1sToBlock2s 
            | verify-true
        get-property "element.semanticElements.Property[2].owner.name" | equals block1sToBlock2s | verify-true
        get-property "element.semanticElements.Property[2].name" | equals block1s | verify-true
        get-property "element.semanticElements.Property[2].aggregation" | equals none | verify-true
        get-property "element.semanticElements.Property[2].isComposite" | equals false | verify-true
        get-property "element.semanticElements.Property[2].owningAssociation.name" | equals block1sToBlock2s 
            | verify-true
    }
}

// Test7- Changed Aggregation source end 
with [get-view Properties] {
get-section Ends | get-combo -index 1 | select none
}
// Check edge decorator
with [get-editor "bdd diagram" | get-diagram -index 1 | get-edit-part -name "bdd diagram"] {
    with [get-edit-part -name "«Block»\r\n"
        + "block2" | get-target-connection -path 0] {
        get-property "element.ownedStyle.sourceArrow" | equals NoDecoration | verify-true
        get-property "element.ownedStyle.targetArrow" | equals NoDecoration | verify-true
    	get-property "element.ownedStyle.lineStyle" | equals solid | verify-true
    }
}

// Check Semantic
with [get-editor "bdd diagram" | get-diagram -index 1 | get-edit-part -name "bdd diagram"] {
    with [get-edit-part -name "«Block»\r\n"
        + "block2" | get-target-connection -path 0] {
        get-property "element.target.member.Property[0].name" | equals block1s | verify-true
        get-property "element.target.member.Property[1].name" | equals block2s | verify-true
   }
    with [get-edit-part -name "«Block»\r\n"
        + "block2" | get-target-connection -path 0] {
        get-property "element.semanticElements.Association[0].name" | equals block1sToBlock2s | verify-true
        get-property "element.semanticElements.Property[1].owner.name" | equals block1sToBlock2s | verify-true
        get-property "element.semanticElements.Property[1].name" | equals block2s | verify-true
        get-property "element.semanticElements.Property[1].aggregation" | equals none | verify-true
        get-property "element.semanticElements.Property[1].isComposite" | equals false | verify-true
        get-property "element.semanticElements.Property[1].owningAssociation.name" | equals block1sToBlock2s 
            | verify-true
        get-property "element.semanticElements.Property[2].owner.name" | equals block1sToBlock2s | verify-true
        get-property "element.semanticElements.Property[2].name" | equals block1s | verify-true
        get-property "element.semanticElements.Property[2].aggregation" | equals none | verify-true
        get-property "element.semanticElements.Property[2].isComposite" | equals false | verify-true
        get-property "element.semanticElements.Property[2].owningAssociation.name" | equals block1sToBlock2s 
            | verify-true
    }
}

//Test-8 Changed Aggregation target end 
with [get-view Properties] {
    get-section Ends | get-combo | select shared
}
// Check edge decorator
with [get-editor "bdd diagram" | get-diagram -index 1 | get-edit-part -name "bdd diagram"] {
    with [get-edit-part -name "«Block»\r\n"
        + "block2" | get-target-connection -path 0] {
        get-property "element.ownedStyle.sourceArrow" | equals NoDecoration | verify-true
        get-property "element.ownedStyle.targetArrow" | equals Diamond | verify-true
    	get-property "element.ownedStyle.lineStyle" | equals solid | verify-true
    }
}

// Check Semantic
with [get-editor "bdd diagram" | get-diagram -index 1 | get-edit-part -name "bdd diagram"] {
    with [get-edit-part -name "«Block»\r\n"
        + "block2" | get-target-connection -path 0] {
        get-property "element.target.member.Property[0].name" | equals block1s | verify-true
        get-property "element.target.member.Property[1].name" | equals block2s | verify-true
   }
    with [get-edit-part -name "«Block»\r\n"
        + "block2" | get-target-connection -path 0] {
        get-property "element.semanticElements.Association[0].name" | equals block1sToBlock2s | verify-true
        get-property "element.semanticElements.Property[1].owner.name" | equals block1sToBlock2s | verify-true
        get-property "element.semanticElements.Property[1].name" | equals block2s | verify-true
        get-property "element.semanticElements.Property[1].aggregation" | equals none | verify-true
        get-property "element.semanticElements.Property[1].isComposite" | equals false | verify-true
        get-property "element.semanticElements.Property[1].owningAssociation.name" | equals block1sToBlock2s 
            | verify-true
        get-property "element.semanticElements.Property[2].owner.name" | equals block1sToBlock2s | verify-true
        get-property "element.semanticElements.Property[2].name" | equals block1s | verify-true
        get-property "element.semanticElements.Property[2].aggregation" | equals shared | verify-true
        get-property "element.semanticElements.Property[2].isComposite" | equals false | verify-true
        get-property "element.semanticElements.Property[2].owningAssociation.name" | equals block1sToBlock2s 
            | verify-true
    }
}


// Save Diagram
get-button "Save (M1+S)" | click

------=_.content-0a7243a0-75d3-3d5f-9791-539de0e5b7ac--
